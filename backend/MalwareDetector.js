const Utils = require("./Utils");

class MalwareDetector {
    constructor(socket, EmailSender) {
        this.socket = socket;
        this.EmailSender = EmailSender;
    }

    async malwareDetected(threatType, maliciousInput, attacker) {
        attacker = attacker === "" ? "Unknown" : attacker;
        const threatMessage = `${threatType} Attack Detected! Attacker: ${attacker}, Malicious Input: ${maliciousInput}\n`;
        Utils.writeToLogFile('../guardianvault/threats_log.txt', threatMessage);
        await this.EmailSender.sendAdminThreatAlert(threatType, attacker);
    }

    // async validateMagicBytes(data, fileName, attacker) {
    //     try {
    //         // Import file-type module
    //         const FileType = require('file-type');

    //         // Convert data to buffer
    //         const buffer = this.convertRawDataToBuffer(data);
            
    //         // Detect file type using the buffer
    //         const type = FileType(buffer);

    //         if (type) {
    //             console.log('Detected file type:', type.mime);
    //         } else {
    //             console.log('File type detection failed.');
    //         }
    //     } catch (error) {
    //         console.error('Error importing file-type module:', error);
    //     }
    // }

    // convertRawDataToBuffer(rawData) {
    //     // Create a Uint8Array from the raw data
    //     const buffer = Buffer.from(rawData);
    
    //     return buffer;
    // }
    
}

module.exports = { MalwareDetector };
