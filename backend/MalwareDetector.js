const Utils = require("./Utils");

class MalwareDetector {
    constructor(socket, EmailSender) {
        this.socket = socket;
        this.csrfToken = "";
        this.EmailSender = EmailSender;
    }

    // Setter for CSRF Token
    setCsrfToken(token) {
        this.csrfToken = token;
    }

    // Validate if the user is authenticated
    validateAuthenticatedUser(authenticationToken, username) {
        if (authenticationToken !== this.csrfToken) {
            this.malwareDetected('CSRF', 'Unauthenticated user found', username);
            return false;
        }
        return true;
    }

    // Function to handle malware detection
    async malwareDetected(threatType, maliciousInput, attacker) {
        // If attacker information is missing, set it to "Unknown"
        attacker = attacker === "" ? "Unknown" : attacker;
        
        // Construct threat message
        const threatMessage = `${threatType} Attack Detected! Attacker: ${attacker}, Malicious Input: ${maliciousInput}\n`;
        
        // Write threat message to log file
        Utils.writeToLogFile('../guardianvault/threats_log.txt', threatMessage);
        
        // Send admin alert about the threat
        await this.EmailSender.sendAdminThreatAlert(threatType, attacker);
    }
}

module.exports = { MalwareDetector };
